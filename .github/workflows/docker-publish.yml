---
name: Push to DockerHub & GHCR

on:
  workflow_call:
    inputs:
      version:
        description: 'Version to publish (release tag)'
        required: true
        type: string
        default: 'latest'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (release tag)'
        required: true
        type: string
        default: 'latest'

env:
  DOCKERHUB_REPO: germainlefebvre4/cvwonder-studio
  GHCR_REPO: ghcr.io/germainlefebvre4/cvwonder-studio
  # PLATFORMS: linux/amd64,linux/arm64

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set versions
        id: versions
        shell: bash
        run: |
          echo "VERSION_ONE_DIGIT=$(echo ${{ inputs.version }} | cut -d '.' -f1)" >> $GITHUB_OUTPUT
          echo "VERSION_TWO_DIGIT=$(echo ${{ inputs.version }} | cut -d '.' -f1-2)" >> $GITHUB_OUTPUT

      - name: Set up Docker
        uses: docker/setup-docker-action@v4
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_REPO }}
            ${{ env.GHCR_REPO }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3
      #   with:
      #     platforms: ${{ env.PLATFORMS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          # platforms: ${{ env.PLATFORMS }}
          load: true
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,"name=${{ env.DOCKERHUB_REPO }},${{ env.GHCR_REPO }}",name-canonical=true,push=true
          build-args: |
            CVWONDER_VERSION=${{ inputs.version }}
          tags: |
            ${{ env.DOCKERHUB_REPO }}:${{ inputs.version }}
            ${{ env.DOCKERHUB_REPO }}:${{ steps.versions.outputs.VERSION_TWO_DIGIT }}
            ${{ env.DOCKERHUB_REPO }}:${{ steps.versions.outputs.VERSION_ONE_DIGIT }}
            ${{ env.DOCKERHUB_REPO }}:latest
            ${{ env.GHCR_REPO }}:${{ inputs.version }}
            ${{ env.GHCR_REPO }}:${{ steps.versions.outputs.VERSION_TWO_DIGIT }}
            ${{ env.GHCR_REPO }}:${{ steps.versions.outputs.VERSION_ONE_DIGIT }}
            ${{ env.GHCR_REPO }}:latest

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          repository: ${{ env.DOCKERHUB_REPO }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          short-description: ${{ github.event.repository.description }}
          readme-filepath: ./docs/dockerhub/README.md
